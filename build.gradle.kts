import nu.studer.gradle.jooq.*
import nu.studer.gradle.jooq.JooqEdition
import java.text.SimpleDateFormat
import java.util.Date

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/tutorial_java_projects.html
 */

val projectPath = projectDir.absolutePath

val jooqVersion = "3.11.11"
val sqliteJDBCVersion = "3.27.2.1"
val flywayVersion = "5.2.4"
val jdbcUrl = "jdbc:sqlite:$projectPath/jExifToolGUI.db"
val jdbcDriver = "org.sqlite.JDBC"

plugins {
    // Apply the java plugin to add support for Java
    java

    // Apply the idea plugin, used for form builder
    idea
    // Apply the application plugin to add support for building an application
    application

    //Shadow plugin for fatJar
    id("com.github.johnrengelman.shadow") version "5.0.0"

    // Jooq Plugin for generating code out of database
    id("com.github.kramerc.gradle-jooq-plugin") version "jitpack-SNAPSHOT"

    // Migration tool for database.
    id("org.flywaydb.flyway") version "5.2.4"
}

project.ext {
    set("mainClassName", "org.hvdw.jexiftoolgui.Application")
}

repositories {
    mavenCentral()
    jcenter()
    maven("https://www.jetbrains.com/intellij-repository/releases")
    maven("https://jetbrains.bintray.com/intellij-third-party-dependencies")
}


dependencies {

    // Log4J and SLF4J configuration dependencies.
    implementation(group = "org.slf4j", name = "slf4j-api", version = "1.7.26")
    implementation(group = "org.apache.logging.log4j", name = "log4j-slf4j-impl", version = "2.11.2")
    implementation(group = "com.fasterxml.jackson.dataformat", name = "jackson-dataformat-yaml", version = "2.9.9")
    implementation(group = "com.fasterxml.jackson.core", name = "jackson-databind", version = "2.9.9")
    // Add dependencies of forms
    implementation(group = "com.intellij", name = "forms_rt", version = "7.0.3")

    // Missing helpers and common utils in java
    implementation(group = "org.apache.commons", name = "commons-lang3", version = "3.9")
    // SQL dependencies - Using sqlite, jooq and flyway
    jooqRuntime(group = "org.xerial", name = "sqlite-jdbc", version = sqliteJDBCVersion)
//    implementation(group = "org.xerial", name = "sqlite-jdbc", version = sqliteJDBCVersion)
    implementation(group = "org.jooq", name = "jooq", version = jooqVersion)
    implementation(group = "javax.annotation", name="javax.annotation-api", version="1.3.2")

    implementation(group = "org.flywaydb", name="flyway-core", version= flywayVersion)

    // Testing dependencies
    testImplementation(group = "junit", name = "junit", version = "4.12")
    testImplementation(group = "com.github.stefanbirkner", name = "system-rules", version = "1.19.0")
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

}

val jar by tasks.getting(Jar::class) {
    manifest {
        attributes["Main-Class"] = project.ext["mainClassName"] as String
        attributes["Build-Timestamp"] = SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(Date())
        attributes["Created-By"] = "Gradle ${gradle.gradleVersion}"
    }
}

application {
    // Define the main class for the application
    mainClassName = project.ext["mainClassName"] as String
}


idea {
    module {
        outputDir = file("build/resources/main")
        testOutputDir = file("build/resources/test")
    }
}

// The jooq and flyway config is just for development.
// Therefore, it is not bad to have the sqlite file in the project folder.
jooq {
    version = jooqVersion
    edition = JooqEdition.OSS
    dependencies {
        runtime(group = "org.xerial", name = "sqlite-jdbc", version = sqliteJDBCVersion)

    }
    "jExifTool"(sourceSets["main"]) {
        jdbc {
            url = jdbcUrl
            driver = jdbcDriver
        }
        generator {
            name = "org.jooq.codegen.DefaultGenerator"
            strategy {
                name = "org.jooq.codegen.DefaultGeneratorStrategy"
            }
            database {
               excludes = "flyway_schema_history|sqlite_master"
            }
            generator {

                generate {
                    isRelations = true
                    isDeprecated = false
                    isRecords = true
                    isFluentSetters = true


                    // ...
                }
                target {
                    packageName = "org.hvdw.jexiftoolgui.jooq"
                }
            }
        }
    }

}

flyway {
    url = jdbcUrl
    dependencies {
        runtime(group = "org.xerial", name = "sqlite-jdbc", version = sqliteJDBCVersion)
    }

}


